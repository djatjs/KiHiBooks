<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.kihibooks.dao.LibraryDAO">
    <select id="selectMyBooks" resultType="LibraryVO">
        SELECT b.BO_CODE as lb_bo_code, b.BO_TITLE as lb_bo_title, b.BO_DESCRIPTION as lb_bo_description, e.EP_COVER_IMG as lb_ep_cover_img, a.AU_NAME as lb_au_name
        FROM library l
        JOIN episode le ON l.LB_EP_CODE = le.EP_CODE
        JOIN book b ON le.EP_BO_CODE = b.BO_CODE
        JOIN author a ON b.BO_AU_NUM = a.AU_NUM
        JOIN
            (SELECT EP_BO_CODE, MAX(EP_CODE) AS 최신_EP_CODE FROM episode GROUP BY EP_BO_CODE)
            latest_ep ON b.BO_CODE = latest_ep.EP_BO_CODE
        JOIN episode e ON latest_ep.EP_BO_CODE = e.EP_BO_CODE AND latest_ep.최신_EP_CODE = e.EP_CODE
        WHERE l.LB_UR_NUM = #{ur_num}
        GROUP BY b.BO_CODE, b.BO_TITLE, b.BO_DESCRIPTION, e.EP_COVER_IMG, a.AU_NAME;
    </select>
    <select id="selectBookListForPage" resultType="LibraryVO">
        SELECT b.BO_CODE as lb_bo_code, b.BO_TITLE as lb_bo_title, b.BO_DESCRIPTION as lb_bo_description, e.EP_COVER_IMG as lb_ep_cover_img, a.AU_NAME as lb_au_name
        FROM library l
        JOIN episode le ON l.LB_EP_CODE = le.EP_CODE
        JOIN book b ON le.EP_BO_CODE = b.BO_CODE
        JOIN author a ON b.BO_AU_NUM = a.AU_NUM
        JOIN
            (SELECT EP_BO_CODE, MAX(EP_CODE) AS 최신_EP_CODE FROM episode GROUP BY EP_BO_CODE)
            latest_ep ON b.BO_CODE = latest_ep.EP_BO_CODE
        JOIN episode e ON latest_ep.EP_BO_CODE = e.EP_BO_CODE AND latest_ep.최신_EP_CODE = e.EP_CODE
        WHERE l.LB_UR_NUM = #{ur_num}
        GROUP BY b.BO_CODE, b.BO_TITLE, b.BO_DESCRIPTION, e.EP_COVER_IMG, a.AU_NAME
        LIMIT #{limit} OFFSET #{offset};
    </select>
    <select id="selectMyInterests" resultType="InterestVO">
        SELECT
            b.BO_CODE as it_bo_code, b.BO_TITLE as it_bo_title, b.BO_DESCRIPTION as it_bo_description,
            e.EP_COVER_IMG as it_ep_cover_img, a.AU_NAME as it_au_name
        FROM interest i
        JOIN book b ON i.IT_BO_CODE = b.BO_CODE
        LEFT JOIN
            (
                SELECT EP_BO_CODE, MAX(EP_CODE) AS 최신_EP_CODE
                FROM episode
                GROUP BY EP_BO_CODE
            ) latest_ep ON b.BO_CODE = latest_ep.EP_BO_CODE
        LEFT JOIN episode e ON latest_ep.EP_BO_CODE = e.EP_BO_CODE AND latest_ep.최신_EP_CODE = e.EP_CODE
        JOIN author a ON b.BO_AU_NUM = a.AU_NUM
        WHERE i.IT_UR_NUM = #{ur_num}
        GROUP BY b.BO_CODE, b.BO_TITLE, b.BO_DESCRIPTION, e.EP_COVER_IMG, a.AU_NAME;
    </select>
    <select id="selectInterestListForPage" resultType="InterestVO">
        SELECT
            b.BO_CODE as it_bo_code, b.BO_TITLE as it_bo_title, b.BO_DESCRIPTION as it_bo_description,
            e.EP_COVER_IMG as it_ep_cover_img, a.AU_NAME as it_au_name
        FROM interest i
        JOIN book b ON i.IT_BO_CODE = b.BO_CODE
        LEFT JOIN
            (
                SELECT EP_BO_CODE, MAX(EP_CODE) AS 최신_EP_CODE
                FROM episode
                GROUP BY EP_BO_CODE
            ) latest_ep ON b.BO_CODE = latest_ep.EP_BO_CODE
        LEFT JOIN episode e ON latest_ep.EP_BO_CODE = e.EP_BO_CODE AND latest_ep.최신_EP_CODE = e.EP_CODE
        JOIN author a ON b.BO_AU_NUM = a.AU_NUM
        WHERE i.IT_UR_NUM = #{ur_num}
        GROUP BY b.BO_CODE, b.BO_TITLE, b.BO_DESCRIPTION, e.EP_COVER_IMG, a.AU_NAME
        LIMIT #{limit} OFFSET #{offset};
    </select>

    <select id="selectPurchasedEpisodeList" resultType="EpisodeVO">
        select * from library
        join user on LB_UR_NUM  = UR_NUM
        join episode on LB_EP_CODE = EP_CODE
        join book on EP_BO_CODE = BO_CODE
        where bo_code = #{bo_code} and lb_ur_num = #{ur_num}
    </select>

    <select id="selectComments" resultType="CommentVO">
        select *, user.ur_nickname AS co_user from comment
        join user on co_ur_num = ur_num
        where co_ep_code = #{ep_code} and co_del = 'N'
        order by co_num desc
    </select>
    <select id="selectLikeCount" resultType="int">
        select count(*) from `like`
        where li_co_num = #{co_num}
    </select>
    <select id="selectLikedComment" resultType="int">
        select li_co_num from `like`
        where li_ur_num = #{ur_num}
    </select>
    <select id="selectCommentBySort" resultType="CommentVO">
        SELECT c.*,  u.ur_nickname AS co_user,
            COALESCE((
                SELECT COUNT(*) FROM `like` l
                WHERE l.li_co_num = c.co_num
            ), 0) AS co_li_count
        FROM comment c
        JOIN user u ON c.co_ur_num = u.ur_num
        LEFT JOIN comment parent_comment ON
            parent_comment.co_num = (CASE WHEN c.co_ori_num IS NULL OR c.co_ori_num = 0 THEN c.co_num ELSE c.co_ori_num END)
        WHERE c.co_ep_code = #{ep_code} AND c.co_del = 'N'
        <choose>
            <when test="sort == 'likes'">
                ORDER BY co_li_count DESC, c.CO_DATE DESC
            </when>
            <otherwise>
                ORDER BY
                    parent_comment.CO_DATE DESC,
                    (CASE WHEN c.co_ori_num IS NULL OR c.co_ori_num = 0 THEN 0 ELSE 1 END) ASC,
                    c.CO_DATE ASC
            </otherwise>
        </choose>
    </select>

    <insert id="insertComment">
        insert into comment(co_ur_num, co_content, co_spoiler, co_ep_code)
        value(#{co_ur_num}, #{co_content}, #{co_spoiler}, #{co_ep_code})
    </insert>
    <update id="deleteComment">
        update comment set co_del = 'Y' where co_num = #{co_num}
    </update>
    <insert id="insertRecomment">
        insert into comment(co_ur_num, co_content, co_ori_num, co_ep_code)
        value(#{co_ur_num}, #{co_content}, #{co_ori_num}, #{co_ep_code})
    </insert>
    <select id="getLike" resultType="int">
        select count(*) from `like`
        where li_co_num = #{co_num} and li_ur_num = #{ur_num}
    </select>
    <insert id="insertLike">
        insert into `like`(li_co_num, li_ur_num)
        value(#{co_num}, #{ur_num})
    </insert>
    <delete id="deleteLike">
        delete from `like` where li_ur_num = #{ur_num} and li_co_num = #{co_num}
    </delete>
</mapper>