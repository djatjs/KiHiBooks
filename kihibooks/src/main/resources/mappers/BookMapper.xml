<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.kh.kihibooks.dao.BookDAO">
    <select id="selectBookList" resultType="BookVO">
        select book.* from book
        join recent_view on bo_code = rc_bo_code
        where rc_ur_num = #{ur_num}
    </select>
    <select id="selectTopBooks" resultType="BookVO">
        SELECT 
            BO_CODE, BO_TITLE, BO_TOTAL_RATING, BO_REVIEW_COUNT, BO_PUBLISH_DATE
        FROM 
            book
        ORDER BY 
            BO_TOTAL_RATING DESC, BO_REVIEW_COUNT DESC
        LIMIT 18;
    </select>
    <select id="selectWaitFreeBooks" resultType="BookVO">
        SELECT 
            BO_CODE, BO_TITLE, BO_TOTAL_RATING, BO_REVIEW_COUNT, BO_WAIT_FOR_FREE
        FROM 
            book
        WHERE 
            BO_WAIT_FOR_FREE = 'Y'
        ORDER BY BO_PUBLISH_DATE DESC
        LIMIT 20
    </select>
    <select id="selectNewBooks" resultType="BookVO">
        SELECT 
            BO_CODE, BO_TITLE, BO_TOTAL_RATING, BO_REVIEW_COUNT, AU_NAME
        FROM 
            book
        JOIN
            author ON book.BO_AU_NUM = author.AU_NUM
        WHERE
            BO_PUBLISH_DATE >= DATE_SUB(NOW(), INTERVAL 6 MONTH)
        ORDER BY BO_PUBLISH_DATE DESC
    </select>

    <select id="selectFilteredBooks" resultType="BookVO">
        SELECT 
            BO_CODE, BO_TITLE, BO_TOTAL_RATING, BO_REVIEW_COUNT, AU_NAME AS bo_author,
            BO_TOTAL_EPISODE, BO_ADULT, BO_FIN, BO_PUBLISH_DATE
        FROM 
            book
        JOIN 
            author ON book.BO_AU_NUM = author.AU_NUM
        WHERE 
            BO_PUBLISH_DATE >= DATE_SUB(NOW(), INTERVAL 6 MONTH)
        
        <if test="adultYN != null and adultYN != ''">
                AND BO_ADULT = #{adultYN}
        </if>
        
        <choose>
            <when test="order == 'popular'">
                ORDER BY BO_TOTAL_RATING DESC, BO_REVIEW_COUNT DESC
            </when>
            <otherwise>
                ORDER BY BO_PUBLISH_DATE DESC
            </otherwise>
        </choose>

        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countFilteredBooks" resultType="int">
        SELECT 
            COUNT(*)
        FROM 
            book
        WHERE 
            BO_PUBLISH_DATE >= DATE_SUB(NOW(), INTERVAL 6 MONTH)

        <if test="adultYN != null and adultYN !=''">
            AND BO_ADULT = #{adultYN}
        </if>
    </select>
    <select id="selectBestBooks" resultType="BookVO">
        SELECT 
            BO_CODE, BO_TITLE, BO_TOTAL_RATING, COUNT(RV_NUM) AS BO_REVIEW_COUNT,
            BO_FIN, BO_ADULT, BO_PUBLISH_DATE,
            BO_TOTAL_EPISODE,
            AU_NAME AS bo_author
        FROM 
            book
        JOIN 
            author ON BO_AU_NUM = AU_NUM
        LEFT JOIN
            review ON RV_BO_CODE = BO_CODE
        <!-- 날짜 필터: 오늘 / 주간 / 월간 -->
        <choose>
            <when test="range == 'day'">
                AND DATE(RV_DATE) = CURDATE()
            </when>
            <when test="range == 'week'">
                AND RV_DATE >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
            </when>
            <when test="range == 'month'">
                AND RV_DATE >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
            </when>
        </choose>

        WHERE 
            1=1
        <!-- 성인 필터 -->
        <if test="adultYN != null and adultYN != ''">
            AND BO_ADULT = #{adultYN}
        </if>
        <!-- 완결 필터 -->
        <if test="finished != null and finished != ''">
            AND BO_FIN = #{finished}
        </if>


        GROUP BY BO_CODE
        ORDER BY COUNT(RV_NUM) DESC, BO_TOTAL_RATING DESC
        LIMIT #{size} OFFSET #{offset}
    </select>
    <select id="countBestBooks" resultType="int">
        SELECT 
            COUNT(DISTINCT BO_CODE)
        FROM 
            book
        LEFT JOIN
            review ON RV_BO_CODE = BO_CODE
        <choose>
            <when test="range == 'day'">
            AND DATE(RV_DATE) = CURDATE()
            </when>
            <when test="range == 'week'">
            AND RV_DATE >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
            </when>
            <when test="range == 'month'">
            AND RV_DATE >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH)
            </when>
        </choose>

        WHERE 
            1=1
        <if test="adultYN != null and adultYN != ''">
            AND BO_ADULT = #{adultYN}
        </if>

        <if test="finished != null and finished != ''">
            AND BO_FIN = #{finished}
        </if>

    </select>



    

</mapper>