DROP DATABASE IF EXISTS `KIHIBOOKS`;

CREATE DATABASE `KIHIBOOKS`;

USE `KIHIBOOKS`;

DROP TABLE IF EXISTS `INTEREST`;

CREATE TABLE `INTEREST` (
	`IT_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`IT_BO_CODE`	CHAR(9)	NOT NULL,
	`IT_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `AUTHOR`;

CREATE TABLE `AUTHOR` (
	`AU_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`AU_NAME`	VARCHAR(20) NOT	NULL,
	`AU_PROFILE`	VARCHAR(255)	NULL
);

DROP TABLE IF EXISTS `USER`;

CREATE TABLE `USER` (
	`UR_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`UR_EMAIL`	VARCHAR(255) UNIQUE	NULL,
	`UR_PW`	VARCHAR(255)	NULL,
	`UR_NICKNAME`	VARCHAR(30)	NULL,
	`UR_AUTHORITY`	ENUM("ADMIN", "USER", "PUBLISHER") DEFAULT "USER" NOT	NULL,
	`UR_POINT`	INT default 0 NOT	NULL,
	`UR_GENDER`	ENUM("M", "F")	NULL,
	`UR_YEAR`	CHAR(4)	NULL,
	`UR_DEL`	ENUM("Y", "N") DEFAULT "N" NOT	NULL
);

DROP TABLE IF EXISTS `COMMENT`;

CREATE TABLE `COMMENT` (
	`CO_NUM`	INT PRIMARY KEY	NOT NULL,
	`CO_CONTENT`	LONGTEXT NOT	NULL,
	`CO_SPOILER`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`CO_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP	NULL,
	`CO_DEL`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`CO_ORI_NUM`	INT	NULL,
	`CO_EP_CODE`	VARCHAR(12)	NOT NULL,
	`CO_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `PUBLISHER_ID`;

CREATE TABLE `PUBLISHER_ID` (
	`PI_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`PI_AUTHORITY`	ENUM("SUPER", "EDITOR") DEFAULT "EDITOR" NOT	NULL,
    `PI_DEL` ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`PI_PU_CODE`	CHAR(4)	NOT NULL,
	`PI_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `BOOK_KEYWORD`;

CREATE TABLE `BOOK_KEYWORD` (
	`BK_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`BK_BO_CODE`	CHAR(9)	NOT NULL,
	`BK_KW_CODE`	CHAR(5)	NOT NULL
);

DROP TABLE IF EXISTS `LIBRARY`;

CREATE TABLE `LIBRARY` (
	`LB_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`LB_PAGE`	INT	NULL,
	`LB_EP_CODE`	VARCHAR(12)	NOT NULL,
	`LB_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `LIKE`;

CREATE TABLE `LIKE` (
	`LI_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`LI_CO_NUM`	INT	NOT NULL,
	`LI_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `CART`;

CREATE TABLE `CART` (
	`CA_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`CA_EP_CODE`	VARCHAR(12)	NOT NULL,
	`CA_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `KEYWORD`;

CREATE TABLE `KEYWORD` (
	`KW_CODE`	CHAR(5) PRIMARY KEY	NOT NULL,
	`KW_NAME`	VARCHAR(10) NOT	NULL,
	`KW_KC_CODE`	CHAR(3)	NOT NULL
);

DROP TABLE IF EXISTS `MAIN_CATE`;

CREATE TABLE `MAIN_CATE` (
	`MC_CODE`	CHAR(1) PRIMARY KEY	NOT NULL,
	`MC_NAME`	VARCHAR(6) NOT	NULL
);

DROP TABLE IF EXISTS `POINT`;

CREATE TABLE `POINT` (
	`PO_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`PO_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP	NULL,
	`PO_TOTAL_PRICE`	INT NOT	NULL,
	`PO_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `REVIEW`;

CREATE TABLE `REVIEW` (
	`RV_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`RV_RATING`	INT	NULL,
	`RV_SPOILER`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`RV_CONTENT`	LONGTEXT NOT	NULL,
	`RV_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL,
	`RV_DEL`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`RV_ORI_NUM`	INT	NULL,
	`RV_BO_CODE`	CHAR(9)	NOT NULL,
	`RV_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `REVIEW_LIKE`;

CREATE TABLE `REVIEW_LIKE` (
	`RL_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
    `RL_STATE`	INT NOT NULL,
	`RL_UR_NUM`	INT	NOT NULL,
	`RL_RV_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `SUB_CATE`;

CREATE TABLE `SUB_CATE` (
	`SC_CODE`	CHAR(2) PRIMARY KEY	NOT NULL,
	`SC_NAME`	VARCHAR(6) NOT	NULL,
	`SC_MC_CODE`	CHAR(1)	NOT NULL
);

DROP TABLE IF EXISTS `BOOK`;

CREATE TABLE `BOOK` (
	`BO_CODE`	CHAR(9) PRIMARY KEY	NOT NULL,
	`BO_TITLE`	VARCHAR(50) NOT	NULL,
	`BO_DESCRIPTION`	LONGTEXT NOT	NULL,
	`BO_FIN`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`BO_TOTAL_EPISODE`	INT DEFAULT 0 NOT	NULL,
	`BO_TOTAL_RATING`	INT	NULL,
	`BO_REVIEW_COUNT`	INT	NULL,
	`BO_FREE_EPISODE`	INT	NULL,
	`BO_SERIAL_SCHEDULE`	VARCHAR(255)	NULL,
	`BO_WAIT_FOR_FREE`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`BO_WFF_DATE`	INT	NULL,
	`BO_PUBLISH_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL,
	`BO_ADULT`	ENUM("Y", "N") DEFAULT "N" NOT	NULL,
	`BO_SC_CODE`	CHAR(2)	NOT NULL,
	`BO_PI_NUM`	INT	NOT NULL,
	`BO_AU_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `EPISODE`;

CREATE TABLE `EPISODE` (
	`EP_CODE`	VARCHAR(12) PRIMARY KEY	NOT NULL,
	`EP_TITLE`	VARCHAR(255) NOT	NULL,
	`EP_FILE_NAME`	VARCHAR(255) NOT	NULL,
	`EP_COVER_IMG`	VARCHAR(255) NOT	NULL,
	`EP_TOTAL_PAGE`	INT NOT	NULL,
	`EP_CMT_COUNT`	INT	NULL,
	`EP_PRICE`	INT NOT	NULL,
	`EP_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL,
	`EP_BO_CODE`	CHAR(9)	NOT NULL
);

DROP TABLE IF EXISTS `EMAIL_VERIFICATION`;

CREATE TABLE `EMAIL_VERIFICATION` (
	`EV_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`EV_EMAIL`	VARCHAR(255) NOT	NULL,
	`EV_CODE`	VARCHAR(255) NOT	NULL,
	`EV_EXPRIED`	DATETIME NOT	NULL
);

DROP TABLE IF EXISTS `NOTICE`;

CREATE TABLE `NOTICE` (
	`NT_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
    `NT_TITLE`	VARCHAR(255) NOT	NULL,
	`NT_CONTENT`	LONGTEXT NOT	NULL,
    `NT_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL,
	`NT_PI_NUM`	INT	NOT NULL,
	`NT_BO_CODE`	CHAR(9)	NOT NULL
);

DROP TABLE IF EXISTS `RECENT_VIEW`;

CREATE TABLE `RECENT_VIEW` (
	`RC_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`RC_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL,
	`RC_BO_CODE`	CHAR(9)	NOT NULL,
	`RC_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `PUBLISHER`;

CREATE TABLE `PUBLISHER` (
	`PU_CODE`	CHAR(4) PRIMARY KEY	NOT NULL,
	`PU_NAME`	VARCHAR(50) NOT	NULL
);

DROP TABLE IF EXISTS `BUY_LIST`;

CREATE TABLE `BUY_LIST` (
	`bl_num`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`BL_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP	NULL,
	`BL_END_DATE`	DATETIME	NULL,
	`BL_EP_CODE`	VARCHAR(12)	NOT NULL,
	`BL_UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `WAIT_FOR_FREE`;

CREATE TABLE `WAIT_FOR_FREE` (
	`WF_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`WF_CAN_DATE`	DATETIME NOT	NULL,
	`WF_BO_CODE`	CHAR(9)	NOT NULL,
	`WF_UR_NUM`	INT	NOT NULL
);

CREATE TABLE `KEYWORD_CATEGORY` (
	`KC_CODE` CHAR(3) PRIMARY KEY	NOT NULL,
	`KC_NAME`	VARCHAR(10) NOT	NULL
);

DROP TABLE IF EXISTS `ATTENDANCE`;

CREATE TABLE `ATTENDANCE` (
	`AT_ID`	INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
	`AT_DATE`	DATE NOT NULL,
	`AT_POINT`	INT NOT NULL DEFAULT 100	,
	`AT_UR_NUM`	INT NOT NULL,
    unique key `UK_ATTENDANCE_DATE_USER` (`AT_DATE`, `AT_UR_NUM`) -- 하루 1회만 출석 가능
);

DROP TABLE IF EXISTS `ATTENDANCE_REWARD`;

CREATE TABLE `ATTENDANCE_REWARD` (
	`AR_ID`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`AR_TYPE`	VARCHAR(255)	NULL,
	`AR_POINT`	INT DEFAULT 0	NULL,
	`AR_PROBABILITY`	INT	NULL,
	`AR_MESSAGE`	VARCHAR(255)	NULL
);

DROP TABLE IF EXISTS `NOTI_SET`;

CREATE TABLE `NOTI_SET` (
	`NS_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
	`NS_UR_NUM`	INT	NOT NULL,
	`NS_BO_CODE`	CHAR(9)	NOT NULL
);

DROP TABLE IF EXISTS `ALARM`;

CREATE TABLE `ALARM` (
	`AL_NUM`	INT	NOT NULL,
	`AL_TYPE`	ENUM("NOTI", "WFF") NOT	NULL,
	`AL_BOOK`	VARCHAR(50)	NULL,
	`UR_NUM`	INT	NOT NULL
);

DROP TABLE IF EXISTS `ORDER`;

CREATE TABLE `ORDER` (
	`OD_ID`	VARCHAR(255) PRIMARY KEY NOT NULL,
	`OD_TOTAL_AMOUNT`	INT NOT	NULL,
	`OD_USE_POINT`	INT	NULL,
	`OD_FINAL_AMOUNT`	INT NOT	NULL,
	`OD_METHOD`	ENUM("NAVER", "KAKAO", "TOSS") NOT	NULL,
	`OD_CREATED_AT`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL,
	`OD_PAID_AT`	DATETIME	NULL,
	`OD_UR_NUM`	INT	NOT NULL
);

ALTER TABLE `ORDER` ADD CONSTRAINT `FK_USER_TO_ORDER_1` FOREIGN KEY (
	`OD_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `NOTI_SET` ADD CONSTRAINT `FK_USER_TO_NOTI_SET_1` FOREIGN KEY (
	`NS_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `NOTI_SET` ADD CONSTRAINT `FK_BOOK_TO_NOTI_SET_1` FOREIGN KEY (
	`NS_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `ALARM` ADD CONSTRAINT `FK_USER_TO_ALARM_1` FOREIGN KEY (
	`UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `ATTENDANCE` ADD COLUMN `AR_ID` INT, ADD CONSTRAINT `FK_ATTENDANCE_REWARD`  FOREIGN KEY (
	`AR_ID`
)  REFERENCES `ATTENDANCE_REWARD` (
	`AR_ID`
);

ALTER TABLE `ATTENDANCE` ADD CONSTRAINT `FK_USER_TO_ATTENDANCE_1` FOREIGN KEY (
	`AT_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `KEYWORD` ADD CONSTRAINT `FK_KEYWORD_CATEGORY_TO_KEYWORD_1` FOREIGN KEY (
	`KW_KC_CODE`
)
REFERENCES `KEYWORD_CATEGORY` (
	`KC_CODE`
);

ALTER TABLE `INTEREST` ADD CONSTRAINT `FK_BOOK_TO_INTEREST_1` FOREIGN KEY (
	`IT_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `INTEREST` ADD CONSTRAINT `FK_USER_TO_INTEREST_1` FOREIGN KEY (
	`IT_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `COMMENT` ADD CONSTRAINT `FK_EPISODE_TO_COMMENT_1` FOREIGN KEY (
	`CO_EP_CODE`
)
REFERENCES `EPISODE` (
	`EP_CODE`
);

ALTER TABLE `COMMENT` ADD CONSTRAINT `FK_USER_TO_COMMENT_1` FOREIGN KEY (
	`CO_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `PUBLISHER_ID` ADD CONSTRAINT `FK_PUBLISHER_TO_PUBLISHER_ID_1` FOREIGN KEY (
	`PI_PU_CODE`
)
REFERENCES `PUBLISHER` (
	`PU_CODE`
);

ALTER TABLE `PUBLISHER_ID` ADD CONSTRAINT `FK_USER_TO_PUBLISHER_ID_1` FOREIGN KEY (
	`PI_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `BOOK_KEYWORD` ADD CONSTRAINT `FK_KEYWORD_TO_BOOK_KEYWORD_1` FOREIGN KEY (
	`BK_KW_CODE`
)
REFERENCES `KEYWORD` (
	`KW_CODE`
);

ALTER TABLE `BOOK_KEYWORD` ADD CONSTRAINT `FK_BOOK_TO_BOOK_KEYWORD_1` FOREIGN KEY (
	`BK_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `LIBRARY` ADD CONSTRAINT `FK_EPISODE_TO_LIBRARY_1` FOREIGN KEY (
	`LB_EP_CODE`
)
REFERENCES `EPISODE` (
	`EP_CODE`
);

ALTER TABLE `LIBRARY` ADD CONSTRAINT `FK_USER_TO_LIBRARY_1` FOREIGN KEY (
	`LB_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `LIKE` ADD CONSTRAINT `FK_COMMENT_TO_LIKE_1` FOREIGN KEY (
	`LI_CO_NUM`
)
REFERENCES `COMMENT` (
	`CO_NUM`
);

ALTER TABLE `LIKE` ADD CONSTRAINT `FK_USER_TO_LIKE_1` FOREIGN KEY (
	`LI_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `CART` ADD CONSTRAINT `FK_EPISODE_TO_CART_1` FOREIGN KEY (
	`CA_EP_CODE`
)
REFERENCES `EPISODE` (
	`EP_CODE`
);

ALTER TABLE `CART` ADD CONSTRAINT `FK_USER_TO_CART_1` FOREIGN KEY (
	`CA_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `POINT` ADD CONSTRAINT `FK_USER_TO_POINT_1` FOREIGN KEY (
	`PO_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_BOOK_TO_REVIEW_1` FOREIGN KEY (
	`RV_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `REVIEW` ADD CONSTRAINT `FK_USER_TO_REVIEW_1` FOREIGN KEY (
	`RV_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `REVIEW_LIKE` ADD CONSTRAINT `FK_USER_TO_REVIEW_LIKE_1` FOREIGN KEY (
	`RL_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `REVIEW_LIKE` ADD CONSTRAINT `FK_REVIEW_TO_REVIEW_LIKE_1` FOREIGN KEY (
	`RL_RV_NUM`
)
REFERENCES `REVIEW` (
	`RV_NUM`
);

ALTER TABLE `SUB_CATE` ADD CONSTRAINT `FK_MAIN_CATE_TO_SUB_CATE_1` FOREIGN KEY (
	`SC_MC_CODE`
)
REFERENCES `MAIN_CATE` (
	`MC_CODE`
);

ALTER TABLE `BOOK` ADD CONSTRAINT `FK_SUB_CATE_TO_BOOK_1` FOREIGN KEY (
	`BO_SC_CODE`
)
REFERENCES `SUB_CATE` (
	`SC_CODE`
);

ALTER TABLE `BOOK` ADD CONSTRAINT `FK_PUBLISHER_ID_TO_BOOK_1` FOREIGN KEY (
	`BO_PI_NUM`
)
REFERENCES `PUBLISHER_ID` (
	`PI_NUM`
);

ALTER TABLE `BOOK` ADD CONSTRAINT `FK_AUTHOR_TO_BOOK_1` FOREIGN KEY (
	`BO_AU_NUM`
)
REFERENCES `AUTHOR` (
	`AU_NUM`
);

ALTER TABLE `EPISODE` ADD CONSTRAINT `FK_BOOK_TO_EPISODE_1` FOREIGN KEY (
	`EP_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `NOTICE` ADD CONSTRAINT `FK_PUBLISHER_ID_TO_NOTICE_1` FOREIGN KEY (
	`NT_PI_NUM`
)
REFERENCES `PUBLISHER_ID` (
	`PI_NUM`
);

ALTER TABLE `NOTICE` ADD CONSTRAINT `FK_BOOK_TO_NOTICE_1` FOREIGN KEY (
	`NT_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `RECENT_VIEW` ADD CONSTRAINT `FK_BOOK_TO_RECENT_VIEW_1` FOREIGN KEY (
	`RC_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `RECENT_VIEW` ADD CONSTRAINT `FK_USER_TO_RECENT_VIEW_1` FOREIGN KEY (
	`RC_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `BUY_LIST` ADD CONSTRAINT `FK_EPISODE_TO_BUY_LIST_1` FOREIGN KEY (
	`BL_EP_CODE`
)
REFERENCES `EPISODE` (
	`EP_CODE`
);

ALTER TABLE `BUY_LIST` ADD CONSTRAINT `FK_USER_TO_BUY_LIST_1` FOREIGN KEY (
	`BL_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

ALTER TABLE `WAIT_FOR_FREE` ADD CONSTRAINT `FK_BOOK_TO_WAIT_FOR_FREE_1` FOREIGN KEY (
	`WF_BO_CODE`
)
REFERENCES `BOOK` (
	`BO_CODE`
);

ALTER TABLE `WAIT_FOR_FREE` ADD CONSTRAINT `FK_USER_TO_WAIT_FOR_FREE_1` FOREIGN KEY (
	`WF_UR_NUM`
)
REFERENCES `USER` (
	`UR_NUM`
);

-- 공지 테이블에 타이틀 추가
-- ALTER TABLE `NOTICE` ADD NT_TITLE VARCHAR(255) NOT   NULL;
-- 잘못 입력한 경우 삭제
-- ALTER TABLE `NOTICE` DROP NT_TITLE;
-- 회차 테이블에 타이틀 추가
-- ALTER TABLE `EPISODE` ADD EP_TITLE VARCHAR(255) NOT NULL;

-- 유저 테이블에 권한 설정 수정함
-- ALTER TABLE `USER` DROP `UR_AUTHORITY`;
-- ALTER TABLE `USER` ADD  `UR_AUTHORITY`	ENUM("ADMIN", "USER", "PUBLISHER") DEFAULT "USER" NOT	NULL;

-- 리뷰 테이블 수정
-- ALTER TABLE `REVIEW` ADD `RV_SPOILER`	ENUM("Y", "N") DEFAULT "N" NOT	NULL;
-- ALTER TABLE `REVIEW` ADD `RV_DATE`	DATETIME DEFAULT CURRENT_TIMESTAMP NOT	NULL;
-- ALTER TABLE `REVIEW` ADD `RV_DEL`	ENUM("Y", "N") DEFAULT "N" NOT	NULL;
-- ALTER TABLE `REVIEW` ADD `RV_ORI_NUM`	INT	NULL;

-- 리뷰 공감 테이블 생성
-- DROP TABLE IF EXISTS `REVIEW_LIKE`;

-- CREATE TABLE `REVIEW_LIKE` (
-- 	`RL_NUM`	INT PRIMARY KEY AUTO_INCREMENT	NOT NULL,
-- 	`UR_NUM`	INT	NOT NULL,
-- 	`RV_NUM`	INT	NOT NULL
-- );

-- ALTER TABLE `REVIEW_LIKE` ADD CONSTRAINT `FK_USER_TO_REVIEW_LIKE_1` FOREIGN KEY (
-- 	`UR_NUM`
-- )
-- REFERENCES `USER` (
-- 	`UR_NUM`
-- );

-- ALTER TABLE `REVIEW_LIKE` ADD CONSTRAINT `FK_REVIEW_TO_REVIEW_LIKE_1` FOREIGN KEY (
-- 	`RV_NUM`
-- )
-- REFERENCES `REVIEW` (
-- 	`RV_NUM`
-- );